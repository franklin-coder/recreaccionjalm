"use strict";(()=>{var e={};e.id=386,e.ids=[386],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7778:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>j,requestAsyncStorage:()=>m,routeModule:()=>l,serverHooks:()=>g,staticGenerationAsyncStorage:()=>h});var a={};r.r(a),r.d(a,{GET:()=>d,POST:()=>p,dynamic:()=>u});var n=r(9303),o=r(8716),s=r(3131),c=r(7070),i=r(2663);let u="force-dynamic";async function p(e){try{let{name:t,email:r,subject:a,message:n,phone:o,eventType:s}=await e.json();if(!t||!r||!n)return c.NextResponse.json({error:"Nombre, email y mensaje son requeridos"},{status:400});let u=await i._.contactRequest.create({data:{name:t,email:r,subject:a||"Consulta general",message:n,phone:o,eventType:s,status:"pending"}});return c.NextResponse.json({success:!0,message:"Tu solicitud ha sido enviada exitosamente. Te contactaremos pronto.",id:u.id})}catch(e){return console.error("Error creating contact request:",e),c.NextResponse.json({error:"Error al enviar la solicitud"},{status:500})}}async function d(){try{let e=await i._.contactRequest.findMany({orderBy:{createdAt:"desc"},take:50});return c.NextResponse.json(e)}catch(e){return console.error("Error fetching contact requests:",e),c.NextResponse.json({error:"Error fetching contact requests"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/contact/route",pathname:"/api/contact",filename:"route",bundlePath:"app/api/contact/route"},resolvedPagePath:"/home/ubuntu/github_repos/recreaccionjalm/app/api/contact/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:h,serverHooks:g}=l,x="/api/contact/route";function j(){return(0,s.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:h})}},2663:(e,t,r)=>{r.d(t,{_:()=>n});let a=require("@prisma/client"),n=globalThis.prisma??(()=>{try{return new a.PrismaClient}catch(e){return console.warn("Failed to create Prisma client, using mock:",e),{}}})()}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[276,972],()=>r(7778));module.exports=a})();